import React, { useState } from 'react';

const PDFViewer = ({ content, title, onClose }) => {
  const [isLoading, setIsLoading] = useState(true);

  const handleLoad = () => {
    setIsLoading(false);
  };

  // Convertir el contenido markdown a HTML simple
  const convertMarkdownToHTML = (markdown) => {
    return markdown
      .replace(/^# (.*$)/gim, '<h1 class="text-2xl font-bold mb-4 text-blue-800">$1</h1>')
      .replace(/^## (.*$)/gim, '<h2 class="text-xl font-semibold mb-3 mt-6 text-gray-800 border-b border-gray-200 pb-2">$1</h2>')
      .replace(/^### (.*$)/gim, '<h3 class="text-lg font-medium mb-2 mt-4 text-gray-700">$1</h3>')
      .replace(/\*\*(.*?)\*\*/g, '<strong class="font-semibold">$1</strong>')
      .replace(/\*(.*?)\*/g, '<em class="italic">$1</em>')
      .replace(/\n\n/g, '</p><p class="mb-3 leading-relaxed">')
      .replace(/^/g, '<p class="mb-3 leading-relaxed">')
      .replace(/$/g, '</p>')
      .replace(/\n- (.*$)/gim, '</p><p class="mb-2 ml-4">• $1</p>')
      .replace(/\n\d+\. (.*$)/gim, '</p><p class="mb-2 ml-4">$&</p>');
  };

  const htmlContent = convertMarkdownToHTML(content);

  return (
    <div className="fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50 p-4">
      <div className="bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-hidden flex flex-col">
        <div className="flex justify-between items-center p-4 border-b bg-gray-50">
          <h3 className="text-lg font-semibold text-gray-800">{title}</h3>
          <div className="flex space-x-2">
            <button
              onClick={() => {
                // Crear un documento con mejor formato
                const formattedContent = `# ${title}\n\n${content}\n\n---\nGenerated by TechFlow Academy Training System\nDate: ${new Date().toLocaleDateString()}`;
                const blob = new Blob([formattedContent], { type: 'text/markdown' });
                const url = URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = `${title.replace(/[^a-z0-9]/gi, '_').toLowerCase()}.md`;
                a.click();
                URL.revokeObjectURL(url);
              }}
              className="px-3 py-1 text-sm bg-blue-600 text-white rounded hover:bg-blue-700"
            >
              Download PDF
            </button>
            <button
              onClick={onClose}
              className="text-gray-500 hover:text-gray-700 text-2xl font-bold"
            >
              ×
            </button>
          </div>
        </div>
        
        <div className="flex-1 overflow-auto p-6">
          <div 
            className="prose max-w-none"
            dangerouslySetInnerHTML={{ __html: htmlContent }}
          />
        </div>
      </div>
    </div>
  );
};

export default PDFViewer; 